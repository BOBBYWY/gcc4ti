[Main]
Name=GrayDBufSetAMSPlane
Type=Function
Subtype=Macro
Header Files=gray.h
Definition=void GrayDBufSetAMSPlane (short idx, short plane);
Real Definition=#define GrayDBufSetAMSPlane(i,x) (_rom_call(void,(void*,long),1A2) (GrayDBufGetPlane (i, x), 0xEF007F))
See Also=gray.h/GraySetAMSPlane, gray.h/GrayDBufSetActiveAMSPlane, gray.h/GrayDBufSetHiddenAMSPlane, gray.h/GrayDBufGetActiveIdx, gray.h/GrayDBufGetHiddenIdx, gray.h/GrayDBufSetActiveIdx

[Description]
Forces graphics routines to use selected plane of a specific buffer.

[Explanation]
GrayDBufSetAMSPlane acts like
<A HREF="$$LINK(gray.h/GraySetAMSPlane)">GraySetAMSPlane</A>,
but it has an additional parameter <I>idx</I> which contains the index of
the buffer for which the plane pointer should be returned. <I>idx</I> should
be 0 or 1; it is usually a value returned from
<A HREF="$$LINK(gray.h/GrayDBufGetActiveIdx)">GrayDBufGetActiveIdx</A> or
<A HREF="$$LINK(gray.h/GrayDBufGetHiddenIdx)">GrayDBufGetHiddenIdx</A>.
Usually, you do not need to call this function explicitly; call
<A HREF="$$LINK(gray.h/GrayDBufSetActiveAMSPlane)">GrayDBufSetActiveAMSPlane</A> or
<A HREF="$$LINK(gray.h/GrayDBufSetHiddenAMSPlane)">GrayDBufSetHiddenAMSPlane</A>
instead.
<BR><BR>
Drawing into the currently visible buffer has (almost) direct effect on the
contents of the screen. Drawing into the hidden buffer has no effect until
<A HREF="$$LINK(gray.h/GrayDBufSetActiveIdx)">GrayDBufSetActiveIdx</A> or
<A HREF="$$LINK(gray.h/GrayDBufToggle)">GrayDBufToggle</A> is called.
